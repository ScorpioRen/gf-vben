// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// CasbinRuleDao is the manager for logic model data accessing and custom defined data operations functions management.
type CasbinRuleDao struct {
	gmvc.M                   // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      casbinRuleColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB            // DB is the raw underlying database management object.
	Table  string            // Table is the underlying table name of the DAO.
}

// CasbinRuleColumns defines and stores column names for table casbin_rule.
type casbinRuleColumns struct {
	Ptype string //
	V0    string //
	V1    string //
	V2    string //
	V3    string //
	V4    string //
	V5    string //
}

// NewCasbinRuleDao creates and returns a new DAO object for table data access.
func NewCasbinRuleDao() *CasbinRuleDao {
	columns := casbinRuleColumns{
		Ptype: "ptype",
		V0:    "v0",
		V1:    "v1",
		V2:    "v2",
		V3:    "v3",
		V4:    "v4",
		V5:    "v5",
	}
	return &CasbinRuleDao{
		C:     columns,
		M:     g.DB("default").Model("casbin_rule").Safe(),
		DB:    g.DB("default"),
		Table: "casbin_rule",
	}
}
